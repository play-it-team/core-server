#  Copyright (c) 2019 - 2020. Abhimanyu Saharan <desk.abhimanyu@gmail.com> and the Play.It contributors

# Generated by Django 3.0 on 2020-04-19 20:14

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='DatabaseTestModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status',
                 models.CharField(choices=[('green', 0), ('yellow', 1), ('orange', 2), ('red', 3)], default='green',
                                  max_length=10, verbose_name='Status')),
                ('peak_status',
                 models.CharField(choices=[('green', 0), ('yellow', 1), ('orange', 2), ('red', 3)], default='green',
                                  max_length=10, verbose_name='Peak Status')),
                ('description', models.TextField(blank=True,
                                                 help_text='We will auto fill the description from the first event message if not set',
                                                 null=True, verbose_name='Description')),
                ('message', models.TextField(blank=True, null=True, verbose_name='Message')),
                ('created_on', models.DateTimeField(auto_now=True, verbose_name='Created On')),
                ('updated_on', models.DateTimeField(auto_now_add=True, verbose_name='Updated On')),
            ],
            options={
                'verbose_name': 'Event',
                'verbose_name_plural': 'Events',
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='Name')),
                ('slug', models.SlugField(max_length=128, unique=True, verbose_name='Slug')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('status',
                 models.CharField(choices=[('green', 0), ('yellow', 1), ('orange', 2), ('red', 3)], default='green',
                                  max_length=10, verbose_name='Status')),
                ('order', models.SmallIntegerField(default=0, verbose_name='Order')),
                ('created_on', models.DateTimeField(auto_now=True, verbose_name='Created On')),
                ('updated_on', models.DateTimeField(auto_now_add=True, verbose_name='Updated On')),
            ],
            options={
                'verbose_name': 'Service',
                'verbose_name_plural': 'Services',
                'ordering': ('order', 'name'),
            },
        ),
        migrations.CreateModel(
            name='EventUpdate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status',
                 models.CharField(choices=[('green', 0), ('yellow', 1), ('orange', 2), ('red', 3)], max_length=10,
                                  verbose_name='Status')),
                ('message', models.TextField(blank=True, null=True, verbose_name='Message')),
                ('created_on', models.DateTimeField(auto_now=True, verbose_name='Created On')),
                ('event',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='event', to='health.Event',
                                   verbose_name='Event')),
            ],
            options={
                'verbose_name': 'Event Update',
                'verbose_name_plural': 'Event Updates',
            },
        ),
        migrations.AddField(
            model_name='event',
            name='services',
            field=models.ManyToManyField(related_name='service', to='health.Service', verbose_name='Service'),
        ),
    ]
